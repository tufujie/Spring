循环控制，它可以将集合(Collection)中的成员循序浏览一遍。运作方式为当条件符合时，就会持续重复执行的本体内容。
为循环控制，它可以将集合(Collection)中的成员循序浏览一遍。运作方式为当条件符合时，就会持续重复执行的本体内容。
语法

语法1：迭代一集合对象之所有成员
<c:forEach [var="varName"] items="collection" [varStatus="varStatusName"] [begin="begin"] [end="end"] [step="step"]>
本体内容
</c:forEach>

语法2：迭代指定的次数
<c:forEach [var="varName"] [varStatus="varStatusName"] begin="begin" end="end" [step="step"]>
本体内容
</c:forEach>

标签具有以下一些属性：
var：迭代参数的名称。在迭代体中可以使用的变量的名称，用来表示每一个迭代变量。类型为String。
items：要进行迭代的集合。对于它所支持的类型将在下面进行讲解。
varStatus：迭代变量的名称，用来表示迭代的状态，可以访问到迭代自身的信息。
begin：如果指定了items，那么迭代就从items[begin]开始进行迭代；如果没有指定items，那么就从begin开始迭代。它的类型为整数。
end：如果指定了items，那么就在items[end]结束迭代；如果没有指定items，那么就在end结束迭代。它的类型也为整数。
step：迭代的步长。
标签的items属性支持Java平台所提供的所有标准集合类型。此外，您可以使用该操作来迭代数组（包括基本类型数组）中的元素。它所支持的集合类型以及迭代的元素如下所示：
java.util.Collection：调用iterator()来获得的元素。
java.util.Map：通过java.util.Map.Entry所获得的实例。
java.util.Iterator：迭代器元素。
java.util.Enumeration：枚举元素。
Object实例数组：数组元素。
基本类型值数组：经过包装的数组元素。
用逗号定界的String：分割后的子字符串。
javax.servlet.jsp.jstl.sql.Result：SQL查询所获得的行。
不论是对整数还是对集合进行迭代，的varStatus 属性所起的作用相同。和var属性一样，varStatus用于创建限定了作用域的变量（改变量只在当前标签体内起作用）。不过，由varStatus属性命名的变量并不存储当前索引值或当前元素，而是赋予javax.servlet.jsp.jstl.core.LoopTagStatus类的实例。该类包含了一系列的特性，它们描述了迭代的当前状态，如下这些属性的含义如下所示：
current：当前这次迭代的（集合中的）项。
index：当前这次迭代从0开始的迭代索引。
count：当前这次迭代从1开始的迭代计数。
first：用来表明当前这轮迭代是否为第一次迭代，该属性为boolean类型。
last：用来表明当前这轮迭代是否为最后一次迭代，该属性为boolean类型。
begin：begin属性的值。
end：end属性的值
step：step属性的值
下面就来看一个个基本的例子，表格隔行背景色变化
<c:forEach var="item" items="${contents}" varStatus="status">
      <tr><c:if test="${status.count%2==0}">bgcolor="#CCCCFE"</c:if> align="left">
 xxx
      </tr>
</c:forEach>
限制
·假若有begin属性时，begin必须大于等于 0
·假若有end属性时，必须大于begin
·假若有step属性时，step必须大于等于0
Null 和 错误处理
·假若items为null时，则表示为一空的集合对象
·假若begin大于或等于items时，则迭代不运算
说明
如果要循序浏览一个集合对象，并将它的内容显示出来，就必须有items属性。