方式1（推荐）：
在web.xml配置文件中servlet-name配置的文件中添加
    <mvc:resources location="/resources/image/" mapping="/image/**" />
    <mvc:resources location="/resources/js/" mapping="/js/**" />
    <mvc:resources location="/resources/css/" mapping="/css/**" />
其中location为静态文件对应文件夹，mapping为映射，例如在/resources/js/文件夹下有文件jquery-3.3.1.min.js
则页面引入方法为：
<script type="text/javascript" src="/js/jquery-3.3.1.min.js"></script>

方式2：
激活Tomcat的defaultServlet来处理静态文件
在web.xml中配置
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.gif</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.png</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>
JSP中，则页面引入方法为：
<script type="text/javascript" src="<%=request.getContextPath()%>/resources/js/jquery-3.3.1.min.js"></script>